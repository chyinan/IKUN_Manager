<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ikunmanager.mapper.EmployeeMapper">

    <resultMap id="EmployeeResultMap" type="com.ikunmanager.entity.Employee">
        <id property="id" column="id"/>
        <result property="empId" column="emp_id"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="age" column="age"/>
        <result property="position" column="position"/>
        <result property="salary" column="salary"/>
        <result property="status" column="status"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="joinDate" column="join_date"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="deptId" column="dept_id"/>
        <result property="deptName" column="dept_name"/>
    </resultMap>

    <select id="findById" resultMap="EmployeeResultMap">
        SELECT
            e.id,
            e.emp_id,
            e.name,
            e.gender,
            e.age,
            e.position,
            e.salary,
            e.status,
            e.phone,
            e.email,
            e.join_date,
            e.create_time,
            e.update_time,
            d.id as dept_id,
            d.dept_name
        FROM
            employee e
        LEFT JOIN
            department d ON e.dept_id = d.id
        WHERE
            e.id = #{id}
    </select>

    <select id="findAll" resultMap="EmployeeResultMap">
        SELECT
            e.id,
            e.emp_id,
            e.name,
            e.gender,
            e.age,
            e.position,
            e.salary,
            e.status,
            e.phone,
            e.email,
            e.join_date,
            e.create_time,
            e.update_time,
            d.id as dept_id,
            d.dept_name
        FROM
            employee e
        LEFT JOIN
            department d ON e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                AND e.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="empId != null and empId != ''">
                AND e.emp_id LIKE CONCAT('%', #{empId}, '%')
            </if>
            <if test="deptName != null and deptName != ''">
                AND d.dept_name = #{deptName}
            </if>
            <if test="status != null and status != ''">
                AND e.status = #{status}
            </if>
        </where>
        ORDER BY e.id DESC
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO employee (
            emp_id, name, gender, age, position, dept_id, salary, status, phone, email, join_date, create_time, update_time
        )
        VALUES (
            #{empId}, #{name}, #{gender}, #{age}, #{position}, #{deptId}, #{salary}, #{status}, #{phone}, #{email}, #{joinDate}, #{createTime}, #{updateTime}
        )
    </insert>

    <update id="update">
        UPDATE employee
        SET
            emp_id = #{empId},
            name = #{name},
            gender = #{gender},
            age = #{age},
            position = #{position},
            dept_id = #{deptId},
            salary = #{salary},
            status = #{status},
            phone = #{phone},
            email = #{email},
            join_date = #{joinDate},
            update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM employee WHERE id = #{id}
    </delete>

    <delete id="batchDelete">
        DELETE FROM employee WHERE id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="batchInsert">
        INSERT INTO employee (
            emp_id, name, gender, age, position, dept_id, salary, status, phone, email, join_date, create_time, update_time
        )
        VALUES
        <foreach item="employee" collection="employees" separator=",">
            (
                #{employee.empId}, #{employee.name}, #{employee.gender}, #{employee.age}, #{employee.position},
                #{employee.deptId}, #{employee.salary}, #{employee.status}, #{employee.phone}, #{employee.email},
                #{employee.joinDate}, #{employee.createTime}, #{employee.updateTime}
            )
        </foreach>
    </insert>

    <select id="countTotalEmployees" resultType="long">
        SELECT COUNT(*) FROM employee
    </select>

</mapper>